pipeline {
    options {
        buildDiscarder(logRotator(artifactDaysToKeepStr: '30', artifactNumToKeepStr: '5', daysToKeepStr: '30', numToKeepStr: '5'))
    }

    agent {
      kubernetes {
          label "bldpod.${env.BUILD_NUMBER}"
            defaultContainer 'jnlp'
                  yaml """
  apiVersion: v1
  kind: Pod
  metadata:
    labels:
      jenkins: jenkins-pipeline
  spec:
    containers:
    - name: jnlp
      image: jenkinsci/jnlp-slave
      imagePullPolicy: IfNotPresent
      ttyEnabled: true
    
    - name: kubectl
      image: lachlanevenson/k8s-kubectl:v1.8.8
      imagePullPolicy: IfNotPresent
      command:
      - cat
      tty: true
    - name: docker
      image: docker
      imagePullPolicy: IfNotPresent
      command:
      - cat
      tty: true

    - name: maven-nick
      image: maven:3.5.2-jdk-8
      imagePullPolicy: IfNotPresent
      command:
      - cat
      tty: true
      volumeMounts:
        - name: m2-repo
          mountPath: /root/.m2

    volumes:
        - name: m2-repo
          hostPath: 
            path: /Users/narmandi/.m2
            type: Directory
             
  """
              }
          }
    
    stages {
        
        /**stage('Prepare') {
            steps{ 
                container('maven-nick'){
                sh '''
                    hostname
                    echo "Preparing build param"
                    mvn --version
                    env
                '''
            }
            }
        }*/

        stage('test') {
            
            steps{ 
                container('maven-nick'){
                sh '''
                    #cd prashth
                    #mvn clean test
                    echo 'test badhiya hai, ignored for now' 
                '''
                
            }
            }
        }

        stage('package') {
            
            steps{ 
                container('maven-nick'){
                    sh '''
                        cd prashth
                        mvn clean package -DskipTests=true
                        
                    '''
                    stash includes: 'prashth/target/rest-0.1.0.jar', name: 'naren-rest' 
                }
            }
        }

        
        stage('deploy') {
            
            steps{ 
              container('docker'){
                //unstash 'naren-rest'
                sh '''
                    ls -lart
                    #ls -lart ./prashth
                    
                    #cd prashth
                    #docker build -t prashth .
                    #docker run -p 8083:8083 prashth 
                    # steps to run the above docker image
                '''
                //script {
                //    def app = docker.build("prashth","./prashth")
                 //   app.inside{
                 //       sh 'echo "Tests passed"'
                  //      sh 'pwd'
                  //      sh 'ls -l'
                  //      sh 'java -jar app.jar'
                  //      sh 'sleep 1000s'
                  //  }
                //}
              }  
            }
        }


    }
}